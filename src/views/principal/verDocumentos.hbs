<div style="height: 200vh;">
    <div class="container-fluid" style="padding: 5vh;">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-3 col-lg-3 col-xl-2 menu mx-4"> 
                </div>
                <div id="contenido" class="col-md-5 col-lg-5 col-xl-7 form-section d-flex flex-column">
                    
                </div>
                <div class="col-md-3 col-lg-3 col-xl-2 menu mx-4"> 
                </div>
            </div>
        </div>
        <div class="row" style="height: 160vh;">
            <div class="col-md-3 col-lg-3 col-xl-2 menu mx-4" style="background-color: #f8f9fa; padding: 20px; border: 1px solid #ccc;">
                <div class="d-flex flex-column align-items-start">
                    <h4>Documents</h4>
                    <p>Select a document</p>
                    <p><b>Minutes</b></p>
                    <ul>
                        {{#each minutas}}
                            <!-- Aquí en lugar de llamar a una función para mostrar el formulario, se debe cargar el documento en un iframe -->
                            <li onclick="cargarDocumento(this)" class="documento-item" data-firmas="{{this.firmas}}" id="{{this.name}}">{{this.name}}</li>
                        {{/each}}
                    </ul>
                    <p><b>Memorandums</b></p>
                    <ul>
                        {{#each memorandos}}
                            <li onclick="cargarDocumento(this)" class="documento-item" data-firmas="{{this.firmas}}" id="{{this.name}}">{{this.name}}</li>
                        {{/each}}
                    </ul>
                    <p><b>Confidential Memorandums</b></p>
                    <ul>
                        {{#each confidentialMemorandos}}
                            <li onclick="cargarDocumentoConfidencial(this)" class="documento-item" data-firmas="{{this.firmas}}" id="{{this.name}}">{{this.name}}</li>
                        {{/each}}
                    </ul>
                </div>
            </div>
            <div class="col-md-5 col-lg-5 col-xl-7 form-section d-flex flex-column" style="background-color: aliceblue; padding: 5vh; border: 1px black solid;">
                <!-- Aquí se muestra el iframe que cargará el documento -->
                {{#if nombreArch}}
                    <div id="executeContainer" data-should-execute="{{nombreArch}}" style="display: none;">
                            <!-- contenido -->
                    </div>
                    <iframe id="documentoFrame" src="/archivos/{{nombreArch}}" data-nombre="{{nombreArch}}" style="width: 100%; height: 100%; border: none;"></iframe>
                {{else}}
                    <iframe id="documentoFrame" src="" data-nombre="archivo" style="width: 100%; height: 100%; border: none;"></iframe>
                {{/if}}
            </div>
            <div class="col-md-3 col-lg-3 col-xl-2 menu mx-4" style="background-color: #f8f9fa; padding: 20px; border: 1px solid #ccc;">
                <div class="d-flex flex-column align-items-start">
                    <h4>Signatues</h4>
                    <div>
                        <p><b>Completed Signatures</b></p>
                        <ul id="firmasCompletadasList">
                            <!-- Aquí se actualizarán las firmas completadas -->
                        </ul>
                        <p><b>Pending Signatures</b></p>
                        <ul id="firmasPendientesList">
                            <!-- Aquí se actualizarán las firmas pendientes -->
                        </ul>
                    </div>
                    <div id="boton">

                    </div>
                    <div id="alertas">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var contenido = document.getElementById('contenido');
        contenido.innerHTML = '<h1 class="titulo1"><em>View Documents</em></h1><br>';
    });
    
    function cargarDocumento(element) {
        var nombreDocumento = element.textContent.trim(); // Obtener el nombre del documento
        var urlDocumento = obtenerURLDocumento(nombreDocumento); // Obtener la URL del documento según su nombre
        var firmas = element.getAttribute('data-firmas'); //recibimiento de las firmas
        console.log("Cargando documento:", urlDocumento); // Log para verificar la URL generada
        var contenido = document.getElementById('contenido');
        contenido.innerHTML = '<h1 class="titulo1"><em>'+nombreDocumento+'</em></h1><br>';
        var boton = document.getElementById('boton');
        boton.innerHTML = '<button class="btn btn-success btn-sm m-2" ' +
                          'onclick="comprobarFirmas(this)" ' +
                          'id="botonVerf" data-doc="'+nombreDocumento+'">Verify signatures</button>';
        var iframe = document.getElementById('documentoFrame');
        iframe.src = urlDocumento; // Cargar el documento en el iframe
        
        // Verificar si el iframe carga correctamente el documento
        iframe.onload = function() {
            console.log("Documento cargado correctamente:", urlDocumento);
        };
        iframe.onerror = function() {
            console.error("Error al cargar el documento:", urlDocumento);
        };

        actualizarFirmas(firmas);
        mostrarOcultarElemento();
    }

    function obtenerURLDocumento(nombreDocumento) {
        // Aquí puedes ajustar la lógica para generar la URL si es necesario
        return 'archivos/' + nombreDocumento;
    }

    async function cargarDocumentoConfidencial(element) {
    var nombreDocumento = element.textContent.trim(); // Obtener el nombre del documento
    
        try {
            let response = await fetch('/crearDocumento', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ nombreDocumento: nombreDocumento })
            });

            if (!response.ok) {
                throw new Error('Error en la solicitud fetch: ' + response.statusText);
            }

            let data = await response.json();
            
        } catch (error) {
            console.error('Error:', error);
        }
        var urlDocumento = obtenerURLDocumento('temp_'+nombreDocumento); // Obtener la URL del documento según su nombre
        var firmas = element.getAttribute('data-firmas'); //recibimiento de las firmas
        var contenido = document.getElementById('contenido');
        contenido.innerHTML = '<h1 class="titulo1"><em>'+nombreDocumento+'</em></h1><br>';
        var boton = document.getElementById('boton');
        boton.innerHTML = '<button class="btn btn-success btn-sm m-2" ' +
                          'onclick="comprobarFirmas(this)" ' +
                          'id="botonVerf" data-doc="'+nombreDocumento+'">Verify signatures</button>';
        var iframe = document.getElementById('documentoFrame');
        

        iframe.src = urlDocumento; // Cargar el documento en el iframe
        
        // Verificar si el iframe carga correctamente el documento
        iframe.onload = function() {
            console.log("Documento cargado correctamente:", urlDocumento);
        };
        iframe.onerror = function() {
            console.error("Error al cargar el documento:", urlDocumento);
        };

        actualizarFirmas(firmas);
        mostrarOcultarElemento();
    }

    async function comprobarFirmas(element) {
        var nombreDocumento = element.getAttribute('data-doc');
    
        try {
            let response = await fetch('/veriFirma', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ nombreArchivo: nombreDocumento })
            });

            if (!response.ok) {
                throw new Error('Error en la solicitud fetch: ' + response.statusText);
            }

            var error = document.getElementById('alertas');
            let contenido = await response.json();
            let contenidoMns
            if(contenido.data.additionalInfo.dato1 === null || contenido.data.additionalInfo.dato1 === undefined){
                contenidoMns = contenido.data.additionalInfo.dato2;
                alertType = 'alert-danger';
            } else {
                contenidoMns = contenido.data.additionalInfo.dato1;
                alertType = 'alert-success';
            }

            error.innerHTML = `
                <br>
                <div id="customErr" class="alert ${alertType} alert-dismissible fade show" role="alert">
                    ${contenidoMns}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;

            // Crear y agregar el script dinámicamente
            const script = document.createElement('script');
            script.textContent = `
                setTimeout(function() {
                    var alert = document.getElementById('customErr');
                    if (alert) {
                        alert.classList.add('hide');
                        alert.addEventListener('transitionend', function() {
                            alert.remove();
                        }, { once: true });
                    }
                }, 6000);
            `;
            document.body.appendChild(script);
            
        } catch (error) {
            console.error('Error:', error);
        }
    }


</script>